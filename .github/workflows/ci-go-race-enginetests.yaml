name: Enginetest Race

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'go/**'
  push:
    branches: [ main ]
    paths:
      - 'go/**'
  workflow_dispatch:
  
env:
  FORESIGHT_UPLOADER_SIGNER_URL: https://upload.service.runforesight.us
  WORKFLOW_TELEMETRY_BASE_URL: https://api.service.runforesight.us

jobs:
  enginerace:
    name: Go tests - race enginetests
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04 ]
        dolt_fmt: [ "__DOLT__", "__LD_1__", "__DOLT_DEV__" ]
    steps:
    - name: Collect Workflow Telemetry
      if: always()
      uses: runforesight/foresight-workflow-kit-action@v1
      with:
        api_key: ${{ secrets.FORESIGHT_PROJECT_WALL_APIKEY }}
    - name: Set up Go 1.x
      uses: actions/setup-go@v3
      with:
        go-version: ^1.19
      id: go
    - uses: actions/checkout@v3
    - name: Test All
      working-directory: ./go
      run: |
        DOLT_SKIP_PREPARED_ENGINETESTS=1 go test -v -json -race -timeout 30m github.com/dolthub/dolt/go/libraries/doltcore/sqle/enginetest > ./test-report.json -coverprofile=coverage.out
      env:
        DOLT_DEFAULT_BIN_FORMAT: ${{ matrix.dolt_fmt }}

    - name: Analyze Test and/or Coverage Results
      if: always()
      uses: runforesight/foresight-test-kit-action@v1
      with:
        working_directory: ./go
        api_key: ${{ secrets.FORESIGHT_PROJECT_WALL_APIKEY }}
        test_framework: golang
        test_format: json
        test_path: ./test-report.json
        coverage_format: golang
        coverage_path: |
            coverage.out
